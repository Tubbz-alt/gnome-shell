Description: Allow volume to bet set above 100%.
 Some systems have low maximum volume set (like x220), allow, from an option
 in gnome-control-center to set it above that 100% limit from g-s-d
 (keyboard) and gnome-shell.
Origin: ubuntu
Bug-Ubuntu: https://launchpad.net/bugs/1706524
Bug: https://bugzilla.gnome.org/show_bug.cgi?id=710424

Index: gnome-shell-3.24.3/js/ui/status/volume.js
===================================================================
--- gnome-shell-3.24.3.orig/js/ui/status/volume.js
+++ gnome-shell-3.24.3/js/ui/status/volume.js
@@ -3,6 +3,7 @@
 const Clutter = imports.gi.Clutter;
 const Lang = imports.lang;
 const Gio = imports.gi.Gio;
+const GLib = imports.gi.GLib;
 const Gvc = imports.gi.Gvc;
 const St = imports.gi.St;
 const Signals = imports.signals;
@@ -49,6 +50,15 @@ const StreamSlider = new Lang.Class({
         }));
 
         this._stream = null;
+
+        this._use_amplifiedvolume = false;
+        let desktopEnv = GLib.getenv('XDG_SESSION_DESKTOP');
+        if (desktopEnv && desktopEnv.indexOf("ubuntu") !== -1) {
+            this._volumesettings = new Gio.Settings({ schema_id: 'com.ubuntu.sound' });
+            this._volumesettings.connect('changed::allow-amplified-volume',
+                Lang.bind(this, this._updateAmplifiedVolume));
+            this._updateAmplifiedVolume();
+        }
     },
 
     get stream() {
@@ -102,11 +112,24 @@ const StreamSlider = new Lang.Class({
         this._slider.setValue(value);
     },
 
+    _updateAmplifiedVolume: function () {
+        this._use_amplifiedvolume =
+            this._volumesettings.get_boolean('allow-amplified-volume');
+    },
+
+    _get_control_max_volume: function() {
+        // return max volume depending if we are in an permitted amplified setting or not
+        if (this._use_amplifiedvolume) {
+            return this._control.get_vol_max_amplified();
+        }
+        return this._control.get_vol_max_norm();
+    },
+
     _sliderChanged: function(slider, value, property) {
         if (!this._stream)
             return;
 
-        let volume = value * this._control.get_vol_max_norm();
+        let volume = value * this._get_control_max_volume();
         let prevMuted = this._stream.is_muted;
         if (volume < 1) {
             this._stream.volume = 0;
@@ -130,7 +153,7 @@ const StreamSlider = new Lang.Class({
 
     _updateVolume: function() {
         let muted = this._stream.is_muted;
-        this._slider.setValue(muted ? 0 : (this._stream.volume / this._control.get_vol_max_norm()));
+        this._slider.setValue(muted ? 0 : (this._stream.volume / this._get_control_max_volume()));
         this.emit('stream-updated');
     },
 
@@ -142,7 +165,7 @@ const StreamSlider = new Lang.Class({
         if (this._stream.is_muted || volume <= 0) {
             return 'audio-volume-muted-symbolic';
         } else {
-            let n = Math.floor(3 * volume / this._control.get_vol_max_norm()) + 1;
+            let n = Math.floor(3 * volume / this._get_control_max_volume()) + 1;
             if (n < 2)
                 return 'audio-volume-low-symbolic';
             if (n >= 3)
